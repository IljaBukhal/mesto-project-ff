{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["export function createCard(\r\n   card,\r\n   myId,\r\n   template,\r\n   identifiers,\r\n   callbacks\r\n) {\r\n   const {\r\n      deleteBtnHandler,\r\n      imgClickHandler,\r\n      toggleLike\r\n   } = callbacks;\r\n   const cardElement = template.cloneNode(true);\r\n   const cardImage = cardElement.querySelector('.card__image');\r\n   const cardTitle = cardElement.querySelector('.card__title');\r\n   const deleteButton = cardElement.querySelector('.card__delete-button');\r\n   const likeButton = cardElement.querySelector('.card__like-button');\r\n   const likeCounter = cardElement.querySelector('.card__like-counter');\r\n   const cardIsLikedModifier = 'card__like-button_is-active';\r\n   \r\n   function checkLikeFromMe() {\r\n      return card.likes.map((like) => like._id).some((id) => id === myId)\r\n   }\r\n\r\n   function renderLikes() {\r\n      likeButton.classList.toggle(\r\n         cardIsLikedModifier,\r\n         checkLikeFromMe()\r\n      );\r\n      likeCounter.textContent = card.likes.length;\r\n   };\r\n\r\n   cardImage.setAttribute('src', card.link);\r\n   cardImage.setAttribute('alt', card.name);\r\n   cardTitle.textContent = card.name;\r\n   deleteButton.addEventListener('click', (evt) => {\r\n      identifiers.idCardDel = card._id;\r\n      deleteBtnHandler(evt);\r\n   });\r\n   likeButton.addEventListener('click', () => {\r\n      toggleLike(card._id, checkLikeFromMe())\r\n         .then((newCard) => {\r\n            card = newCard;\r\n            renderLikes();\r\n         })\r\n         .catch(console.log);\r\n   });\r\n   cardImage.addEventListener('click', () => {\r\n      imgClickHandler(card);\r\n   });\r\n\r\n   renderLikes();\r\n   if (card.owner['_id'] !== identifiers.myId) deleteButton.remove();\r\n   return cardElement;\r\n}\r\n","function showInputError (\r\n   formElement,\r\n   inputElement,\r\n   errorMessage,\r\n   validationConfig\r\n) {\r\n   const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n   inputElement.classList.add(validationConfig.inputErrorClass);\r\n   if (inputElement.validity.patternMismatch) {\r\n      errorElement.textContent = inputElement.getAttribute('data-pattern-error');\r\n   } else {\r\n      errorElement.textContent = errorMessage;\r\n   }\r\n   errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n   const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n   inputElement.classList.remove(validationConfig.inputErrorClass);\r\n   errorElement.classList.remove(validationConfig.errorClass);\r\n   errorElement.textContent = '';\r\n}\r\n\r\nfunction checkInputValidity (formElement, inputElement, validationConfig) {\r\n   if (!inputElement.validity.valid) {\r\n      showInputError(\r\n         formElement,\r\n         inputElement,\r\n         inputElement.validationMessage,\r\n         validationConfig\r\n         );\r\n   } else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n   }\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n   return inputList.some((inputElement) => !inputElement.validity.valid);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n   if (hasInvalidInput(inputList)) {\r\n      buttonElement.setAttribute('disabled', 'true');\r\n      buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n   } else {\r\n      buttonElement.removeAttribute('disabled');\r\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass); \r\n   }\r\n}\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n   const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n   const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n   inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n   });\r\n   toggleButtonState(inputList, buttonElement, validationConfig);\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n   const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n   const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n   toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n   inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n         checkInputValidity(formElement, inputElement, validationConfig);\r\n         toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n   });\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n   const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n   formList.forEach((formElement) => setEventListeners(formElement, validationConfig));\r\n}","function handleEscKeyUp (evt) {\r\n   if (evt.key === \"Escape\") {\r\n      const popup = document.querySelector(\".popup_is-opened\");\r\n      closeMdl(popup);\r\n   }\r\n}\r\n\r\nexport function openMdl(mdl) {\r\n   mdl.classList.add('popup_is-opened');\r\n   document.addEventListener('keyup', handleEscKeyUp);\r\n}\r\n\r\nexport function closeMdl(mdl) {\r\n   mdl.classList.remove('popup_is-opened');\r\n   document.removeEventListener('keyup', handleEscKeyUp);\r\n}\r\n\r\nexport function addListenersCloseMdl(mdl) {\r\n   const closeBtn = mdl.querySelector('.popup__close');\r\n   closeBtn.addEventListener('click', () => {\r\n      closeMdl(mdl);\r\n   });\r\n   mdl.addEventListener('mousedown', (evt) => {\r\n      if (evt.target === evt.currentTarget) {\r\n         closeMdl(mdl);\r\n      }\r\n   });\r\n}","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42',\r\n  headers: {\r\n    authorization: '8c3c178a-8043-434f-8729-e0f7e0c76d72',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction getResponseData(res) {\r\n   if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`); \r\n   }\r\n   return res.json();\r\n}\r\n\r\nexport function getCards() {\r\n   return fetch(`${config.baseUrl}/cards`, {\r\n      headers: {\r\n         authorization: config.headers.authorization\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function getUserInfo(userId) {\r\n   return fetch(`${config.baseUrl}/users/${userId}`, {\r\n      headers: {\r\n         authorization: config.headers.authorization\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function editProfile(name, about) {\r\n   return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         name: name,\r\n         about: about\r\n      })\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function addNewCard(name, link) {\r\n   return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         name: name,\r\n         link: link\r\n      })\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function deleteCard(id) {\r\n   return fetch(`${config.baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function putLike(id) {\r\n   return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function delLike(id) {\r\n   return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function toggleLike(id, likeStatus) {\r\n   const fetchOptions = {\r\n      method: likeStatus ? 'DELETE' : 'PUT',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n         }\r\n   };\r\n   return fetch(\r\n      `${config.baseUrl}/cards/likes/${id}`,\r\n      fetchOptions\r\n   ).then(getResponseData);\r\n}\r\n\r\nexport function changeAvatar(link) {\r\n   return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         avatar: link\r\n      })\r\n   }).then(getResponseData);\r\n}","import '../pages/index.css';\r\nimport { createCard } from './card.js';\r\nimport {\r\n   enableValidation,\r\n   clearValidation\r\n} from './validation.js'\r\nimport { \r\n   openMdl,\r\n   closeMdl,\r\n   addListenersCloseMdl\r\n} from './modal.js';\r\nimport {\r\n   getUserInfo,\r\n   getCards,\r\n   editProfile,\r\n   addNewCard,\r\n   deleteCard,\r\n   toggleLike,\r\n   changeAvatar\r\n} from './api.js';\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst profileEditBtn = document.querySelector('.profile__edit-button');\r\nconst addCardBtn = document.querySelector('.profile__add-button');\r\n\r\nconst mdlProfileEdit = document.querySelector('.popup_type_edit');\r\nconst mdlAddCard = document.querySelector('.popup_type_new-card');\r\nconst mdlImage = document.querySelector('.popup_type_image');\r\nconst mdlDelCard = document.querySelector('.popup_type_card-delete');\r\nconst mdlChangeAvatar = document.querySelector('.popup_type_change-avatar');\r\nconst modals = document.querySelectorAll('.popup'); \r\n\r\nconst popupImage = mdlImage.querySelector('.popup__image');\r\nconst popupCaption = mdlImage.querySelector('.popup__caption'); \r\n\r\nconst formEditProfile = document.forms['edit-profile'];\r\nconst nameInput = formEditProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formEditProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formNewPlace = document.forms['new-place'];\r\nconst placeNameInput = formNewPlace.querySelector('.popup__input_type_card-name');\r\nconst linkInput = formNewPlace.querySelector('.popup__input_type_url');\r\n\r\nconst formChangeAvatar = document.forms['change-avatar'];\r\nconst avatarLinkInput = formChangeAvatar.querySelector('.popup__input_type_change-avatar-link');\r\n\r\nconst cardDelConfirmationBtn = mdlDelCard.querySelector('.popup__button');\r\n\r\nconst templateCard = document.getElementById('card-template').content;\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst validationConfig = {\r\n   formSelector: '.popup__form',\r\n   inputSelector: '.popup__input',\r\n   submitButtonSelector: '.popup__button',\r\n   inactiveButtonClass: 'popup__button_disabled',\r\n   inputErrorClass: 'popup__input_type-error',\r\n   errorClass: 'popup__error_visible'\r\n};\r\n\r\nconst identifiers = {\r\n   myId: '',\r\n   idCardDel: ''\r\n};\r\n\r\nfunction imgClickHandler({ name, link }) {\r\n   popupImage.alt = name;\r\n   popupCaption.textContent = name;\r\n   popupImage.src = link;\r\n   openMdl(mdlImage);\r\n}\r\n\r\nlet deletedCard;\r\nfunction deleteBtnHandler(evt) {\r\n   deletedCard = evt.target.closest('.card');\r\n   openMdl(mdlDelCard);\r\n}\r\n\r\nconst callbacksCreateCards = {\r\n   deleteBtnHandler,\r\n   imgClickHandler,\r\n   toggleLike\r\n};\r\n\r\nprofileEditBtn.addEventListener('click', () => {\r\n   nameInput.value = profileTitle.textContent;\r\n   jobInput.value = profileDescription.textContent;\r\n   clearValidation(formEditProfile, validationConfig);\r\n   openMdl(mdlProfileEdit);\r\n});\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n   formChangeAvatar.reset();\r\n   clearValidation(formChangeAvatar, validationConfig);\r\n   openMdl(mdlChangeAvatar);\r\n});\r\n\r\naddCardBtn.addEventListener('click', () => {\r\n   formNewPlace.reset();\r\n   clearValidation(formNewPlace, validationConfig);\r\n   openMdl(mdlAddCard);\r\n});\r\n\r\ncardDelConfirmationBtn.addEventListener('click', () => {\r\n   deleteCard(identifiers.idCardDel)\r\n      .then(() => {\r\n         deletedCard.remove(); \r\n         closeMdl(mdlDelCard);\r\n      })\r\n      .catch(console.log);\r\n});\r\n\r\nmodals.forEach((mdl) => {\r\n   addListenersCloseMdl(mdl);\r\n   mdl.classList.add('popup_is-animated');\r\n});\r\n\r\nformEditProfile.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const name = nameInput.value;\r\n   const job = jobInput.value;\r\n   const formButton = formEditProfile.querySelector('.popup__button');\r\n   formButton.textContent = 'Сохранение...';\r\n   editProfile(name, job)\r\n      .then((profileInfo) => {\r\n         profileTitle.textContent = profileInfo.name;\r\n         profileDescription.textContent = profileInfo.about;\r\n         closeMdl(mdlProfileEdit);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         formButton.textContent = 'Сохранить';\r\n      });\r\n});\r\n\r\nformNewPlace.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const place = placeNameInput.value;\r\n   const link = linkInput.value;\r\n   const formButton = formNewPlace.querySelector('.popup__button');\r\n   formButton.textContent = 'Сохранение...';\r\n   addNewCard(place, link)\r\n      .then((card) => {\r\n         const newCard = createCard(\r\n            card,\r\n            identifiers.myId,\r\n            templateCard,\r\n            identifiers,\r\n            callbacksCreateCards\r\n         );\r\n         placesList.prepend(newCard);\r\n         closeMdl(mdlAddCard);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         formButton.textContent = 'Сохранить';\r\n      });\r\n});\r\n\r\nformChangeAvatar.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const formButton = formChangeAvatar.querySelector('.popup__button');\r\n   formButton.textContent = 'Сохранение...';\r\n   changeAvatar(avatarLinkInput.value)\r\n      .then(() => {\r\n         profileAvatar.style = `background-image: url(${avatarLinkInput.value})`;\r\n         closeMdl(mdlChangeAvatar)\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         formButton.textContent = 'Сохранить';\r\n      });\r\n});\r\n\r\nfunction renderCards(\r\n   cards,\r\n   cardList,\r\n   template,\r\n   identifiers,\r\n   callbacks\r\n) {\r\n   const cardElements = Array.from(cardList.children);\r\n   cardElements.forEach((cardElement) => cardElement.remove());\r\n   cards.forEach(card => {\r\n      const newCard = createCard(\r\n         card,\r\n         identifiers.myId,\r\n         template,\r\n         identifiers,\r\n         callbacks\r\n      );\r\n      cardList.append(newCard);\r\n   });\r\n}\r\n\r\nenableValidation(validationConfig);\r\nPromise.all([getUserInfo('me'), getCards()])\r\n   .then(([userInfo, cards]) => {\r\n      profileAvatar.style.backgroundImage = `url('${userInfo.avatar}')`;\r\n      profileTitle.textContent = userInfo.name;\r\n      profileDescription.textContent = userInfo.about;\r\n      identifiers.myId = userInfo._id;\r\n      renderCards(\r\n         cards,\r\n         placesList,\r\n         templateCard,\r\n         identifiers,\r\n         callbacksCreateCards\r\n      );\r\n   });"],"names":["createCard","card","myId","template","identifiers","callbacks","deleteBtnHandler","imgClickHandler","toggleLike","cardElement","cloneNode","cardImage","querySelector","cardTitle","deleteButton","likeButton","likeCounter","checkLikeFromMe","likes","map","like","_id","some","id","renderLikes","classList","toggle","textContent","length","setAttribute","link","name","addEventListener","evt","idCardDel","then","newCard","catch","console","log","owner","remove","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","removeAttribute","inactiveButtonClass","add","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","handleEscKeyUp","key","closeMdl","document","openMdl","mdl","removeEventListener","config","getResponseData","res","ok","json","Promise","reject","status","deletedCard","profileTitle","profileDescription","profileAvatar","profileEditBtn","addCardBtn","mdlProfileEdit","mdlAddCard","mdlImage","mdlDelCard","mdlChangeAvatar","modals","popupImage","popupCaption","formEditProfile","forms","nameInput","jobInput","formNewPlace","placeNameInput","linkInput","formChangeAvatar","avatarLinkInput","cardDelConfirmationBtn","templateCard","getElementById","content","placesList","formSelector","callbacksCreateCards","target","closest","_ref","alt","src","likeStatus","fetchOptions","method","headers","authorization","fetch","value","reset","currentTarget","addListenersCloseMdl","preventDefault","job","formButton","about","body","JSON","stringify","editProfile","profileInfo","finally","place","addNewCard","prepend","avatar","style","errorMessage","patternMismatch","getAttribute","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref2","_ref3","userInfo","cards","backgroundImage","cardList","children","append","renderCards"],"sourceRoot":""}