{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["export function createCard(\r\n   card,\r\n   myId,\r\n   template,\r\n   identifiers,\r\n   callbacks\r\n) {\r\n   const {\r\n      deleteBtnHandler,\r\n      imgClickHandler,\r\n      toggleLike\r\n   } = callbacks;\r\n   const cardElement = template.cloneNode(true);\r\n   const cardImage = cardElement.querySelector('.card__image');\r\n   const cardTitle = cardElement.querySelector('.card__title');\r\n   const deleteButton = cardElement.querySelector('.card__delete-button');\r\n   const likeButton = cardElement.querySelector('.card__like-button');\r\n   const likeCounter = cardElement.querySelector('.card__like-counter');\r\n   const cardIsLikedModifier = 'card__like-button_is-active';\r\n   let currentCard = card;\r\n   \r\n   function checkLikeFromMe() {\r\n      return currentCard.likes.some((like) => like._id === myId);\r\n   }\r\n\r\n   function renderLikes() {\r\n      likeButton.classList.toggle(\r\n         cardIsLikedModifier,\r\n         checkLikeFromMe()\r\n      );\r\n      likeCounter.textContent = currentCard.likes.length;\r\n   };\r\n\r\n   cardImage.setAttribute('src', currentCard.link);\r\n   cardImage.setAttribute('alt', currentCard.name);\r\n   cardTitle.textContent = currentCard.name;\r\n   deleteButton.addEventListener('click', (evt) => {\r\n      identifiers.idCardDel = currentCard._id;\r\n      deleteBtnHandler(evt);\r\n   });\r\n   likeButton.addEventListener('click', () => {\r\n      toggleLike(currentCard._id, checkLikeFromMe())\r\n         .then((newCard) => {\r\n            currentCard = newCard;\r\n            renderLikes();\r\n         })\r\n         .catch(console.log);\r\n   });\r\n   cardImage.addEventListener('click', () => {\r\n      imgClickHandler(currentCard);\r\n   });\r\n\r\n   renderLikes();\r\n   if (currentCard.owner['_id'] !== myId) deleteButton.remove();\r\n   return cardElement;\r\n}\r\n","function showInputError (\r\n   formElement,\r\n   inputElement,\r\n   errorMessage,\r\n   validationConfig\r\n) {\r\n   const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n   inputElement.classList.add(validationConfig.inputErrorClass);\r\n   if (inputElement.validity.patternMismatch) {\r\n      errorElement.textContent = inputElement.getAttribute('data-pattern-error');\r\n   } else {\r\n      errorElement.textContent = errorMessage;\r\n   }\r\n   errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n   const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n   inputElement.classList.remove(validationConfig.inputErrorClass);\r\n   errorElement.classList.remove(validationConfig.errorClass);\r\n   errorElement.textContent = '';\r\n}\r\n\r\nfunction checkInputValidity (formElement, inputElement, validationConfig) {\r\n   if (!inputElement.validity.valid) {\r\n      showInputError(\r\n         formElement,\r\n         inputElement,\r\n         inputElement.validationMessage,\r\n         validationConfig\r\n         );\r\n   } else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n   }\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n   return inputList.some((inputElement) => !inputElement.validity.valid);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n   if (hasInvalidInput(inputList)) {\r\n      buttonElement.setAttribute('disabled', 'true');\r\n      buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n   } else {\r\n      buttonElement.removeAttribute('disabled');\r\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass); \r\n   }\r\n}\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n   const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n   const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n   inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n   });\r\n   toggleButtonState(inputList, buttonElement, validationConfig);\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n   const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n   const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n   toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n   inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n         checkInputValidity(formElement, inputElement, validationConfig);\r\n         toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n   });\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n   const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n   formList.forEach((formElement) => setEventListeners(formElement, validationConfig));\r\n}","function handleEscKeyUp (evt) {\r\n   if (evt.key === \"Escape\") {\r\n      const popup = document.querySelector(\".popup_is-opened\");\r\n      closeMdl(popup);\r\n   }\r\n}\r\n\r\nexport function openMdl(mdl) {\r\n   mdl.classList.add('popup_is-opened');\r\n   document.addEventListener('keyup', handleEscKeyUp);\r\n}\r\n\r\nexport function closeMdl(mdl) {\r\n   mdl.classList.remove('popup_is-opened');\r\n   document.removeEventListener('keyup', handleEscKeyUp);\r\n}\r\n\r\nexport function addListenersCloseMdl(mdl) {\r\n   const closeBtn = mdl.querySelector('.popup__close');\r\n   closeBtn.addEventListener('click', () => {\r\n      closeMdl(mdl);\r\n   });\r\n   mdl.addEventListener('mousedown', (evt) => {\r\n      if (evt.target === evt.currentTarget) {\r\n         closeMdl(mdl);\r\n      }\r\n   });\r\n}","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42',\r\n  headers: {\r\n    authorization: '8c3c178a-8043-434f-8729-e0f7e0c76d72',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nfunction getResponseData(res) {\r\n   if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`); \r\n   }\r\n   return res.json();\r\n}\r\n\r\nexport function getCards() {\r\n   return fetch(`${config.baseUrl}/cards`, {\r\n      headers: {\r\n         authorization: config.headers.authorization\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function getUserInfo(userId) {\r\n   return fetch(`${config.baseUrl}/users/${userId}`, {\r\n      headers: {\r\n         authorization: config.headers.authorization\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function editProfile(name, about) {\r\n   return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         name: name,\r\n         about: about\r\n      })\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function addNewCard(name, link) {\r\n   return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         name: name,\r\n         link: link\r\n      })\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function deleteCard(id) {\r\n   return fetch(`${config.baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function putLike(id) {\r\n   return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function delLike(id) {\r\n   return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   }).then(getResponseData);\r\n}\r\n\r\nexport function toggleLike(id, likeStatus) {\r\n   const fetchOptions = {\r\n      method: likeStatus ? 'DELETE' : 'PUT',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n         }\r\n   };\r\n   return fetch(\r\n      `${config.baseUrl}/cards/likes/${id}`,\r\n      fetchOptions\r\n   ).then(getResponseData);\r\n}\r\n\r\nexport function changeAvatar(link) {\r\n   return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         avatar: link\r\n      })\r\n   }).then(getResponseData);\r\n}","import '../pages/index.css';\r\nimport { createCard } from './card.js';\r\nimport {\r\n   enableValidation,\r\n   clearValidation\r\n} from './validation.js'\r\nimport { \r\n   openMdl,\r\n   closeMdl,\r\n   addListenersCloseMdl\r\n} from './modal.js';\r\nimport {\r\n   getUserInfo,\r\n   getCards,\r\n   editProfile,\r\n   addNewCard,\r\n   deleteCard,\r\n   toggleLike,\r\n   changeAvatar\r\n} from './api.js';\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst profileEditBtn = document.querySelector('.profile__edit-button');\r\nconst addCardBtn = document.querySelector('.profile__add-button');\r\n\r\nconst mdlProfileEdit = document.querySelector('.popup_type_edit');\r\nconst mdlAddCard = document.querySelector('.popup_type_new-card');\r\nconst mdlImage = document.querySelector('.popup_type_image');\r\nconst mdlDelCard = document.querySelector('.popup_type_card-delete');\r\nconst mdlChangeAvatar = document.querySelector('.popup_type_change-avatar');\r\nconst modals = document.querySelectorAll('.popup'); \r\n\r\nconst popupImage = mdlImage.querySelector('.popup__image');\r\nconst popupCaption = mdlImage.querySelector('.popup__caption'); \r\n\r\nconst formEditProfile = document.forms['edit-profile'];\r\nconst nameInput = formEditProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formEditProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formNewPlace = document.forms['new-place'];\r\nconst placeNameInput = formNewPlace.querySelector('.popup__input_type_card-name');\r\nconst linkInput = formNewPlace.querySelector('.popup__input_type_url');\r\n\r\nconst formChangeAvatar = document.forms['change-avatar'];\r\nconst avatarLinkInput = formChangeAvatar.querySelector('.popup__input_type_change-avatar-link');\r\n\r\nconst cardDelConfirmationBtn = mdlDelCard.querySelector('.popup__button');\r\n\r\nconst templateCard = document.getElementById('card-template').content;\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst validationConfig = {\r\n   formSelector: '.popup__form',\r\n   inputSelector: '.popup__input',\r\n   submitButtonSelector: '.popup__button',\r\n   inactiveButtonClass: 'popup__button_disabled',\r\n   inputErrorClass: 'popup__input_type-error',\r\n   errorClass: 'popup__error_visible'\r\n};\r\n\r\nconst identifiers = {\r\n   myId: '',\r\n   idCardDel: ''\r\n};\r\n\r\nfunction imgClickHandler({ name, link }) {\r\n   popupImage.alt = name;\r\n   popupCaption.textContent = name;\r\n   popupImage.src = link;\r\n   openMdl(mdlImage);\r\n}\r\n\r\nlet deletedCard;\r\nfunction deleteBtnHandler(evt) {\r\n   deletedCard = evt.target.closest('.card');\r\n   openMdl(mdlDelCard);\r\n}\r\n\r\nconst callbacksCreateCards = {\r\n   deleteBtnHandler,\r\n   imgClickHandler,\r\n   toggleLike\r\n};\r\n\r\nprofileEditBtn.addEventListener('click', () => {\r\n   nameInput.value = profileTitle.textContent;\r\n   jobInput.value = profileDescription.textContent;\r\n   clearValidation(formEditProfile, validationConfig);\r\n   openMdl(mdlProfileEdit);\r\n});\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n   formChangeAvatar.reset();\r\n   clearValidation(formChangeAvatar, validationConfig);\r\n   openMdl(mdlChangeAvatar);\r\n});\r\n\r\naddCardBtn.addEventListener('click', () => {\r\n   formNewPlace.reset();\r\n   clearValidation(formNewPlace, validationConfig);\r\n   openMdl(mdlAddCard);\r\n});\r\n\r\ncardDelConfirmationBtn.addEventListener('click', () => {\r\n   deleteCard(identifiers.idCardDel)\r\n      .then(() => {\r\n         deletedCard.remove(); \r\n         closeMdl(mdlDelCard);\r\n      })\r\n      .catch(console.log);\r\n});\r\n\r\nmodals.forEach((mdl) => {\r\n   addListenersCloseMdl(mdl);\r\n   mdl.classList.add('popup_is-animated');\r\n});\r\n\r\nfunction toggleTextButton(buttonElement, rtnOriginalValue) {\r\n   buttonElement.textContent = rtnOriginalValue ? 'Сохранить' : 'Сохранение...';\r\n}\r\n\r\nformEditProfile.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const name = nameInput.value;\r\n   const job = jobInput.value;\r\n   const formButton = formEditProfile.querySelector('.popup__button');\r\n   toggleTextButton(formButton, false);\r\n   editProfile(name, job)\r\n      .then((profileInfo) => {\r\n         profileTitle.textContent = profileInfo.name;\r\n         profileDescription.textContent = profileInfo.about;\r\n         closeMdl(mdlProfileEdit);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         toggleTextButton(formButton, true);\r\n      });\r\n});\r\n\r\nformNewPlace.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const place = placeNameInput.value;\r\n   const link = linkInput.value;\r\n   const formButton = formNewPlace.querySelector('.popup__button');\r\n   toggleTextButton(formButton, false);\r\n   addNewCard(place, link)\r\n      .then((card) => {\r\n         const newCard = createCard(\r\n            card,\r\n            identifiers.myId,\r\n            templateCard,\r\n            identifiers,\r\n            callbacksCreateCards\r\n         );\r\n         placesList.prepend(newCard);\r\n         closeMdl(mdlAddCard);\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         toggleTextButton(formButton, true);\r\n      });\r\n});\r\n\r\nformChangeAvatar.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const formButton = formChangeAvatar.querySelector('.popup__button');\r\n   toggleTextButton(formButton, false);\r\n   changeAvatar(avatarLinkInput.value)\r\n      .then((userInfo) => {\r\n         profileAvatar.style = `background-image: url(${userInfo.avatar})`;\r\n         closeMdl(mdlChangeAvatar)\r\n      })\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         toggleTextButton(formButton, true);\r\n      });\r\n});\r\n\r\nfunction renderCards(\r\n   cards,\r\n   cardList,\r\n   template,\r\n   identifiers,\r\n   callbacks\r\n) {\r\n   const cardElements = Array.from(cardList.children);\r\n   cardElements.forEach((cardElement) => cardElement.remove());\r\n   cards.forEach(card => {\r\n      const newCard = createCard(\r\n         card,\r\n         identifiers.myId,\r\n         template,\r\n         identifiers,\r\n         callbacks\r\n      );\r\n      cardList.append(newCard);\r\n   });\r\n}\r\n\r\nenableValidation(validationConfig);\r\nPromise.all([getUserInfo('me'), getCards()])\r\n   .then(([userInfo, cards]) => {\r\n      profileAvatar.style.backgroundImage = `url('${userInfo.avatar}')`;\r\n      profileTitle.textContent = userInfo.name;\r\n      profileDescription.textContent = userInfo.about;\r\n      identifiers.myId = userInfo._id;\r\n      renderCards(\r\n         cards,\r\n         placesList,\r\n         templateCard,\r\n         identifiers,\r\n         callbacksCreateCards\r\n      )\r\n   })\r\n   .catch(console.log);"],"names":["createCard","card","myId","template","identifiers","callbacks","deleteBtnHandler","imgClickHandler","toggleLike","cardElement","cloneNode","cardImage","querySelector","cardTitle","deleteButton","likeButton","likeCounter","currentCard","checkLikeFromMe","likes","some","like","_id","renderLikes","classList","toggle","textContent","length","setAttribute","link","name","addEventListener","evt","idCardDel","then","newCard","catch","console","log","owner","remove","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","removeAttribute","inactiveButtonClass","add","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","handleEscKeyUp","key","closeMdl","document","openMdl","mdl","removeEventListener","config","getResponseData","res","ok","json","Promise","reject","status","deletedCard","profileTitle","profileDescription","profileAvatar","profileEditBtn","addCardBtn","mdlProfileEdit","mdlAddCard","mdlImage","mdlDelCard","mdlChangeAvatar","modals","popupImage","popupCaption","formEditProfile","forms","nameInput","jobInput","formNewPlace","placeNameInput","linkInput","formChangeAvatar","avatarLinkInput","cardDelConfirmationBtn","templateCard","getElementById","content","placesList","formSelector","callbacksCreateCards","target","closest","_ref","alt","src","likeStatus","fetchOptions","method","headers","authorization","fetch","toggleTextButton","rtnOriginalValue","value","reset","currentTarget","addListenersCloseMdl","preventDefault","job","formButton","about","body","JSON","stringify","editProfile","profileInfo","finally","place","addNewCard","prepend","avatar","userInfo","style","errorMessage","patternMismatch","getAttribute","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref2","_ref3","cards","backgroundImage","cardList","children","append","renderCards"],"sourceRoot":""}