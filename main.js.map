{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/scripts/card.js"],"sourcesContent":["function showInputError (\r\n   formElement,\r\n   inputElement,\r\n   errorMessage,\r\n   validationConfig\r\n) {\r\n   const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n   inputElement.classList.add(validationConfig.inputErrorClass);\r\n   if (inputElement.validity.patternMismatch) {\r\n      errorElement.textContent = inputElement.getAttribute('data-pattern-error');\r\n   } else {\r\n      errorElement.textContent = errorMessage;\r\n   }\r\n   errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationConfig) {\r\n   const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n   inputElement.classList.remove(validationConfig.inputErrorClass);\r\n   errorElement.classList.remove(validationConfig.errorClass);\r\n   errorElement.textContent = '';\r\n}\r\n\r\nfunction checkInputValidity (formElement, inputElement, validationConfig) {\r\n   if (!inputElement.validity.valid) {\r\n      showInputError(\r\n         formElement,\r\n         inputElement,\r\n         inputElement.validationMessage,\r\n         validationConfig\r\n         );\r\n   } else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n   }\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n   return inputList.some((inputElement) => !inputElement.validity.valid);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n   if (hasInvalidInput(inputList)) {\r\n      buttonElement.setAttribute('disabled', 'true');\r\n      buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n   } else {\r\n      buttonElement.removeAttribute('disabled');\r\n      buttonElement.classList.remove(validationConfig.inactiveButtonClass); \r\n   }\r\n}\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n   const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n   const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n   inputList.forEach((inputElement) => {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n   });\r\n}\r\n\r\nfunction setEventListeners(formElement, validationConfig) {\r\n   const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n   const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n   toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n   inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n         checkInputValidity(formElement, inputElement, validationConfig);\r\n         toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n   });\r\n}\r\n\r\nexport function enableValidation(validationConfig) {\r\n   const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n   formList.forEach((formElement) => setEventListeners(formElement, validationConfig));\r\n}","function handleEscKeyUp (evt) {\r\n   if (evt.key === \"Escape\") {\r\n      const popup = document.querySelector(\".popup_is-opened\");\r\n      closeMdl(popup);\r\n   }\r\n}\r\n\r\nexport function openMdl(mdl) {\r\n   mdl.classList.add('popup_is-opened');\r\n   document.addEventListener('keyup', handleEscKeyUp);\r\n}\r\n\r\nexport function closeMdl(mdl) {\r\n   mdl.classList.remove('popup_is-opened');\r\n   document.removeEventListener('keyup', handleEscKeyUp);\r\n}\r\n\r\nexport function addListenersCloseMdl(mdl) {\r\n   const closeBtn = mdl.querySelector('.popup__close');\r\n   closeBtn.addEventListener('click', () => {\r\n      closeMdl(mdl);\r\n   });\r\n   mdl.addEventListener('mousedown', (evt) => {\r\n      if (evt.target === evt.currentTarget) {\r\n         closeMdl(mdl);\r\n      }\r\n   });\r\n}","const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-42',\r\n  headers: {\r\n    authorization: '8c3c178a-8043-434f-8729-e0f7e0c76d72',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nexport function getCards() {\r\n   return fetch(`${config.baseUrl}/cards`, {\r\n      headers: {\r\n         authorization: config.headers.authorization\r\n      }\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function getUserInfo(userId) {\r\n   return fetch(`${config.baseUrl}/users/${userId}`, {\r\n      headers: {\r\n         authorization: config.headers.authorization\r\n      }\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function editProfile(name, about) {\r\n   return fetch(`${config.baseUrl}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         name: name,\r\n         about: about\r\n      })\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function addNewCard(name, link) {\r\n   return fetch(`${config.baseUrl}/cards`, {\r\n      method: 'POST',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         name: name,\r\n         link: link\r\n      })\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function deleteCard(id) {\r\n   return fetch(`${config.baseUrl}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function putLike(id) {\r\n   return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function delLike(id) {\r\n   return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      }\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}\r\n\r\nexport function changeAvatar(link) {\r\n   return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n         authorization: config.headers.authorization,\r\n         'Content-Type': config.headers[\"Content-Type\"]\r\n      },\r\n      body: JSON.stringify({\r\n         avatar: link\r\n      })\r\n   })\r\n      .then(res => {\r\n         if (res.ok) {\r\n            return res.json();\r\n         }\r\n         return Promise.reject(`Ошибка: ${res.status}`);\r\n      });\r\n}","import '../pages/index.css';\r\nimport { renderCards } from './card.js';\r\nimport {\r\n   enableValidation,\r\n   clearValidation\r\n} from './validation.js'\r\nimport { \r\n   openMdl,\r\n   closeMdl,\r\n   addListenersCloseMdl\r\n} from './modal.js';\r\nimport {\r\n   getUserInfo,\r\n   getCards,\r\n   editProfile,\r\n   addNewCard,\r\n   deleteCard,\r\n   putLike,\r\n   delLike,\r\n   changeAvatar\r\n} from './api.js';\r\n\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\n\r\nconst profileEditBtn = document.querySelector('.profile__edit-button');\r\nconst addCardBtn = document.querySelector('.profile__add-button');\r\n\r\nconst mdlProfileEdit = document.querySelector('.popup_type_edit');\r\nconst mdlAddCard = document.querySelector('.popup_type_new-card');\r\nconst mdlImage = document.querySelector('.popup_type_image');\r\nconst mdlDelCard = document.querySelector('.popup_type_card-delete');\r\nconst mdlChangeAvatar = document.querySelector('.popup_type_change-avatar');\r\nconst modals = document.querySelectorAll('.popup'); \r\n\r\nconst popupImage = mdlImage.querySelector('.popup__image');\r\nconst popupCaption = mdlImage.querySelector('.popup__caption'); \r\n\r\nconst formEditProfile = document.forms['edit-profile'];\r\nconst nameInput = formEditProfile.querySelector('.popup__input_type_name');\r\nconst jobInput = formEditProfile.querySelector('.popup__input_type_description');\r\n\r\nconst formNewPlace = document.forms['new-place'];\r\nconst placeNameInput = formNewPlace.querySelector('.popup__input_type_card-name');\r\nconst linkInput = formNewPlace.querySelector('.popup__input_type_url');\r\n\r\nconst formChangeAvatar = document.forms['change-avatar'];\r\nconst avatarLinkInput = formChangeAvatar.querySelector('.popup__input_type_change-avatar-link');\r\n\r\nconst cardDelConfirmationBtn = mdlDelCard.querySelector('.popup__button');\r\n\r\nconst templateCard = document.getElementById('card-template').content;\r\nconst placesList = document.querySelector('.places__list');\r\n\r\nconst validationConfig = {\r\n   formSelector: '.popup__form',\r\n   inputSelector: '.popup__input',\r\n   submitButtonSelector: '.popup__button',\r\n   inactiveButtonClass: 'popup__button_disabled',\r\n   inputErrorClass: 'popup__input_type-error',\r\n   errorClass: 'popup__error_visible'\r\n};\r\n\r\nconst identifiers = {\r\n   myId: '',\r\n   idCardDel: ''\r\n};\r\n\r\nfunction imgClickHandler({ name, link }) {\r\n   popupImage.alt = name;\r\n   popupCaption.textContent = name;\r\n   popupImage.src = link;\r\n   openMdl(mdlImage);\r\n}\r\n\r\nfunction deleteBtnHandler(evt) {\r\n   identifiers.idCardDel = evt.target.closest('.card')\r\n      .getAttribute('data-card-id');\r\n   openMdl(mdlDelCard);\r\n}\r\n\r\nfunction likeBtnHandler(evt) {\r\n   evt.target.classList.toggle('card__like-button_is-active');\r\n   const cardId = evt.target.closest('.card').getAttribute('data-card-id');\r\n   getCards()\r\n      .then((cards) => {\r\n         const likedCard = Array.from(cards).find((card) => card['_id'] === cardId);\r\n         const checkLikeFromMe = likedCard.likes\r\n            .some((like) => like['_id'] === identifiers.myId);\r\n         if (!checkLikeFromMe) {\r\n            putLike(likedCard['_id'])\r\n               .finally(getAndRenderCards);\r\n         } else {\r\n            delLike(likedCard['_id'])\r\n               .finally(getAndRenderCards);\r\n         }\r\n      })\r\n      .catch(console.log);\r\n}\r\n\r\nconst callbacksCreateCards = {\r\n   deleteBtnHandler,\r\n   likeBtnHandler,\r\n   imgClickHandler\r\n};\r\n\r\nfunction getAndRenderCards() {\r\n   getCards()\r\n      .then((cards) => {\r\n         renderCards(\r\n            cards,\r\n            placesList,\r\n            templateCard,\r\n            identifiers,\r\n            callbacksCreateCards\r\n         );\r\n      })\r\n      .catch(console.log);\r\n}\r\n\r\ngetUserInfo('me')\r\n   .then((userInfo) => {\r\n      profileAvatar.style.backgroundImage = `url('${userInfo.avatar}')`;\r\n      profileTitle.textContent = userInfo.name;\r\n      profileDescription.textContent = userInfo.about;\r\n      identifiers.myId = userInfo['_id'];\r\n   })\r\n   .catch(console.log)\r\n   .finally(getAndRenderCards);\r\n\r\n\r\nprofileEditBtn.addEventListener('click', () => {\r\n   nameInput.value = profileTitle.textContent;\r\n   jobInput.value = profileDescription.textContent;\r\n   clearValidation(formEditProfile, validationConfig);\r\n   openMdl(mdlProfileEdit);\r\n});\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n   formChangeAvatar.reset();\r\n   clearValidation(formChangeAvatar, validationConfig);\r\n   openMdl(mdlChangeAvatar);\r\n});\r\n\r\naddCardBtn.addEventListener('click', () => {\r\n   formNewPlace.reset();\r\n   clearValidation(formNewPlace, validationConfig);\r\n   openMdl(mdlAddCard);\r\n});\r\n\r\ncardDelConfirmationBtn.addEventListener('click', () => {\r\n   deleteCard(identifiers.idCardDel)\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         getAndRenderCards();\r\n         closeMdl(mdlDelCard);\r\n      });\r\n});\r\n\r\nmodals.forEach((mdl) => {\r\n   addListenersCloseMdl(mdl);\r\n   mdl.classList.add('popup_is-animated');\r\n});\r\n\r\nformEditProfile.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const openedMdl = document.querySelector('.popup_is-opened');\r\n   const name = nameInput.value;\r\n   const job = jobInput.value;\r\n   const formButton = formEditProfile.querySelector('.popup__button');\r\n   formButton.textContent = 'Сохранение...';\r\n   editProfile(name, job)\r\n      .then((profileInfo) => {\r\n         profileTitle.textContent = profileInfo.name;\r\n         profileDescription.textContent = profileInfo.about;\r\n         closeMdl(openedMdl);\r\n         formButton.textContent = 'Сохранить';\r\n      })\r\n      .catch(console.log);\r\n});\r\n\r\nformNewPlace.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const openedMdl = document.querySelector('.popup_is-opened');\r\n   const place = placeNameInput.value;\r\n   const link = linkInput.value;\r\n   const formButton = formNewPlace.querySelector('.popup__button');\r\n   formButton.textContent = 'Сохранение...';\r\n   addNewCard(place, link)\r\n      .catch(console.log)\r\n      .finally(() => {\r\n         getAndRenderCards();\r\n         closeMdl(openedMdl);\r\n         formButton.textContent = 'Сохранить';\r\n      });\r\n});\r\n\r\nformChangeAvatar.addEventListener('submit', (evt) => {\r\n   evt.preventDefault();\r\n   const formButton = formChangeAvatar.querySelector('.popup__button');\r\n   formButton.textContent = 'Сохранение...';\r\n   changeAvatar(avatarLinkInput.value)\r\n      .catch(console.log)\r\n      .finally(() => location.reload());\r\n});\r\n\r\nenableValidation(validationConfig);","export function createCard(\r\n   card,\r\n   template,\r\n   identifiers,\r\n   callbacks\r\n) {\r\n   const {\r\n      deleteBtnHandler,\r\n      likeBtnHandler,\r\n      imgClickHandler\r\n   } = callbacks;\r\n   const cardElement = template.cloneNode(true);\r\n   const cardBody = cardElement.querySelector('.card');\r\n   const cardImage = cardElement.querySelector('.card__image');\r\n   const cardTitle = cardElement.querySelector('.card__title');\r\n   const deleteButton = cardElement.querySelector('.card__delete-button');\r\n   const likeButton = cardElement.querySelector('.card__like-button');\r\n   const likeCounter = cardElement.querySelector('.card__like-counter');\r\n\r\n   cardBody.setAttribute('data-card-id', card['_id']);\r\n   likeCounter.textContent = card.likes.length;\r\n   cardImage.setAttribute('src', card.link);\r\n   cardImage.setAttribute('alt', card.name);\r\n   cardTitle.textContent = card.name;\r\n   deleteButton.addEventListener('click', deleteBtnHandler);\r\n   likeButton.addEventListener('click', likeBtnHandler);\r\n   cardImage.addEventListener('click', () => {\r\n      imgClickHandler(card);\r\n   });\r\n   const checkLikeFromMe = card.likes\r\n      .some((like) => like['_id'] === identifiers.myId);\r\n   if (checkLikeFromMe) likeButton.classList.add('card__like-button_is-active');\r\n   if (card.owner['_id'] !== identifiers.myId) deleteButton.remove();\r\n   return cardElement;\r\n}\r\n\r\nexport function renderCards(\r\n   cards,\r\n   cardList,\r\n   template,\r\n   identifiers,\r\n   callbacks\r\n) {\r\n   const cardElements = Array.from(cardList.children);\r\n   cardElements.forEach((cardElement) => cardElement.remove());\r\n   cards.forEach(card => {\r\n      const newCard = createCard(card, template, identifiers, callbacks);\r\n      cardList.append(newCard);\r\n   });\r\n}\r\n"],"names":["hideInputError","formElement","inputElement","validationConfig","errorElement","querySelector","concat","id","classList","remove","inputErrorClass","errorClass","textContent","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","removeAttribute","inactiveButtonClass","setAttribute","add","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","handleEscKeyUp","evt","key","closeMdl","document","openMdl","mdl","addEventListener","removeEventListener","config","getCards","fetch","headers","authorization","then","res","ok","json","Promise","reject","status","profileTitle","profileDescription","profileAvatar","profileEditBtn","addCardBtn","mdlProfileEdit","mdlAddCard","mdlImage","mdlDelCard","mdlChangeAvatar","modals","popupImage","popupCaption","formEditProfile","forms","nameInput","jobInput","formNewPlace","placeNameInput","linkInput","formChangeAvatar","avatarLinkInput","cardDelConfirmationBtn","templateCard","getElementById","content","placesList","formSelector","identifiers","myId","idCardDel","callbacksCreateCards","deleteBtnHandler","target","closest","getAttribute","likeBtnHandler","toggle","cardId","cards","likedCard","find","card","likes","like","method","delLike","finally","getAndRenderCards","catch","console","log","imgClickHandler","_ref","name","link","alt","src","cardList","template","callbacks","children","cardElement","newCard","cloneNode","cardBody","cardImage","cardTitle","deleteButton","likeButton","likeCounter","length","owner","createCard","append","renderCards","userInfo","style","backgroundImage","avatar","about","value","reset","currentTarget","addListenersCloseMdl","preventDefault","openedMdl","job","formButton","body","JSON","stringify","editProfile","profileInfo","place","addNewCard","location","reload","errorMessage","patternMismatch","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}